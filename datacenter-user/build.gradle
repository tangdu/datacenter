apply plugin: "maven-publish"
ext.set("generate_package", "cn.xnh.datacenter.user")
version '1.0.1'

dependencies {
    compile("com.alibaba:dubbo:${dubbo_version}") {
        exclude(group: "org.springframework")
        exclude(group: "org.apache.curator")
        exclude(group: "log4j")
    }
    compile("org.apache.zookeeper:zookeeper:${zookeeper_version}") {
        exclude(group: "org.slf4j")
    }
    compile("com.101tec:zkclient:${zkclient_version}") {
        exclude(group: "org.slf4j")
    }
    compile(
            "mysql:mysql-connector-java",
            "com.alibaba:druid-spring-boot-starter:${druid_version}"
    )
    compile(
            "org.springframework.boot:spring-boot-starter-data-redis",
            "org.mybatis.spring.boot:mybatis-spring-boot-starter:${springboot_mybatis_version}",
            "com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3",
            "com.dangdang:elastic-job-lite-core:${elasticJob_version}",
            "com.dangdang:elastic-job-lite-spring:${elasticJob_version}",
    )
}

/********************************Facade打包**********************************************/
def base_facade='cn/xnh/datacenter/user';
def facade_paths=[
        "${base_facade}/model/**",
        "${base_facade}/facade/service/**",
        "${base_facade}/facade/statecode/**"]
task facadeJar(type: Jar) {
    archiveName = "${project.name}-${version}.jar".toString()
    from sourceSets.main.output
    destinationDir  file('build/libs')
    includes =facade_paths
    manifest {
        attributes(
                "Manifest-Version": version,
                "Created-By":System.getProperty("user.name"),
                "Build-Jdk": "${sourceCompatibility}",
                "Implementation-Title": project.name,
                "Implementation-Version": version,
                "Built-date":new Date().format('yyyy-MM-dd HH:mm:ss')
        )
    }
}

task facadeSourceJar (type : Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
    includes =facade_paths
}

publishing {
    publications {
        api(MavenPublication) {
            groupId group
            artifactId "${project.name}facade".toString()
            version version

            artifacts=[facadeJar,facadeSourceJar]
        }
    }
    repositories {
        maven {
            url  MAVEN_RELEASE_REPOURL
            credentials {
                username = 'xnh'
                password = 'xnh123'
            }
        }
    }
}
/********************************Facade打包**********************************************/